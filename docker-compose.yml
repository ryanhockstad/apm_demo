version: '3'
services:

  node-1:
    image: docker.elastic.co/elasticsearch/elasticsearch:${VER}
    hostname: node-1
    container_name: node-1
    environment:
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - PEM_PASSWORD=${PEM_PASSWORD}
      - cluster.name=my_cluster
      - node.name=node-1
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - CERTS_DIR=${CERTS_DIR}
    ports:
      - 9200:9200
    volumes:
      - 'certs:${CERTS_DIR}' 
      - ./config/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    networks:
      - 'net'
    healthcheck:
      test: curl --cacert ${CERTS_DIR}/ca/ca.crt -s https://localhost:9200 >/dev/null
      interval: 10s
      timeout: 10s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:${VER}
    hostname: kibana
    container_name: kibana
    environment: 
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: ${ELASTIC_PASSWORD}
      KEY_PASSPHRASE: ${PEM_PASSWORD}
      CERTS_DIR: ${CERTS_DIR}
    ports:
      - 5601:5601
    volumes:
      - 'certs:${CERTS_DIR}' 
      - ./config/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    networks: 
      - 'net'
    depends_on:
      node-1:
        condition: service_healthy
    healthcheck:
      test: curl --cacert ${CERTS_DIR}/ca/ca.crt -s https://localhost:5601 >/dev/null;
      interval: 30s
      timeout: 10s
      retries: 5

  apm-server:
    image: docker.elastic.co/apm/apm-server:${VER}
    hostname: apm-server
    container_name: apm-server
    environment:
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: ${ELASTIC_PASSWORD}
      CERTS_DIR: ${CERTS_DIR}
      PEM_PASSWORD: ${PEM_PASSWORD}
      SECRET_TOKEN: ${SECRET_TOKEN}
    volumes:
    - 'certs:${CERTS_DIR}'
    - ./config/apm-server/apm-server.yml:/usr/share/apm-server/apm-server.yml
    cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
    cap_drop: ["ALL"]
    ports:
    - 8200:8200
    networks:
    - net
    depends_on:
      kibana:
        condition: service_healthy
    healthcheck:
      test: curl --cacert ${CERTS_DIR}/ca/ca.crt -s https://localhost:8200 >/dev/null;
      interval: 10s
      timeout: 10s
      retries: 5

  java-web-app:
    build: ./web_app
    hostname: web-app
    container_name: web-app
    working_dir: /usr/src/web_app
    environment:
      ELASTIC_APM_SECRET_TOKEN: ${SECRET_TOKEN}
    volumes:
    - ./web_app/app:/usr/src/web_app
    ports:
    - 8080:8080
    networks:
    - net
    entrypoint: ["java", "-javaagent:/usr/src/web_app/elastic-apm-agent-1.26.0.jar"]
    command: -jar spring-petclinic-2.5.0-SNAPSHOT.jar
    depends_on:
      apm-server:
        condition: service_healthy

networks:
  net:

volumes:
  certs: